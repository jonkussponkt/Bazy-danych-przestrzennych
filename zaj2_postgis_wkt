CREATE DATABASE geobaza;
ALTER DATABASE geobaza;

CREATE EXTENSION postgis;

CREATE SCHEMA geodane;

CREATE TABLE geodane.buldings (building_id INT PRIMARY KEY NOT NULL,
					   building_geom GEOMETRY,
					   bulding_name VARCHAR(150));
CREATE TABLE geodane.roads (road_id INT PRIMARY KEY NOT NULL,
				    road_geom GEOMETRY,
				    road_name VARCHAR(150));
CREATE TABLE geodane.poi (poi_id INT PRIMARY KEY NOT NULL,
				  poi_geom GEOMETRY,
				  poi_name VARCHAR(150));	

INSERT INTO geodane.buldings (building_id, building_geom, bulding_name)
VALUES
	(1, ST_PolygonFromText('POLYGON((8 1.5,8 4,10.5 4,10.5 1.5,8 1.5))', -1), 'BuildingA'),
	(2, ST_PolygonFromText('POLYGON((4 5,4 7,6 7,6 5,4 5))', -1), 'BuildingB'),  --DWA NAWIASY MAJĄ BYĆ (( .. ))
	(3, ST_PolygonFromText('POLYGON((3 6,3 8,5 8,5 6,3 6))', -1), 'BuildingC'),
	(4, ST_PolygonFromText('POLYGON((9 8,9 9,10 9,10 8,9 8))', -1), 'BuildingD'),
	(5, ST_PolygonFromText('POLYGON((1 1,1 2,2 2,2 1,1 1))', -1), 'BuildingF');
	
INSERT INTO geodane.roads (road_id, road_geom, road_name)
VALUES
	(1, ST_GeomFromText('LINESTRING(0 4.5, 12 4.5)'), 'RoadX'),
	(2, ST_GeomFromText('LINESTRING(7.5 0, 7.5 10.5)'), 'RoadY');
	
INSERT INTO geodane.poi (poi_id, poi_geom, poi_name)
VALUES
	(1, ST_GeomFromText('POINT(1 3.5)'), 'G'),
	(2, ST_GeomFromText('POINT(5.5 1.5)'), 'H'),
	(3, ST_GeomFromText('POINT(9.5 6)'), 'I'),
	(4, ST_GeomFromText('POINT(6.5 6)'), 'J'),
	(5, ST_GeomFromText('POINT(6 9.5)'), 'K');
	
--6a.Wyznacz całkowitą długość dróg w analizowanym mieście.  

SELECT SUM(ST_Length(road_geom)) FROM geodane.roads

--6b. Wypisz geometrię (WKT), pole powierzchni oraz obwód poligonu reprezentującego budynek o nazwie BuildingA.

SELECT ST_AsText(building_geom) AS WKT, ST_Area(building_geom) AS Area, ST_Perimeter(building_geom) AS Perimeter
FROM geodane.buldings
	WHERE bulding_name = 'BuildingA';
	
--6c. Wypisz nazwy i pola powierzchni wszystkich poligonów w warstwie budynki. Wyniki posortuj alfabetycznie.

SELECT bulding_name AS Name, ST_Area(building_geom) AS Area FROM geodane.buldings
	ORDER BY bulding_name;
	
--6d.	Wypisz nazwy i obwody 2 budynków o największej powierzchni.  

SELECT bulding_name AS Name, ST_Perimeter(building_geom) AS Perimeter from geodane.buldings
	ORDER BY ST_Area(building_geom) DESC
	LIMIT 2;
	
--6e.	Wyznacz najkrótszą odległość między budynkiem BuildingC a punktem G.  

SELECT ST_Distance (building_geom, poi_geom) AS Line, poi_name, bulding_name FROM geodane.buldings
	NATURAL JOIN geodane.poi 
	WHERE poi_name = 'G' AND bulding_name = 'BuildingC';

--6f.	Wypisz pole powierzchni tej części budynku BuildingC, która znajduje się w odległości większej niż 0.5 od budynku BuildingB. 

SELECT ST_Area(ST_Difference(
				 ST_Difference((SELECT building_geom FROM geodane.buldings WHERE bulding_name = 'BuildingC'),
							   (SELECT building_geom FROM geodane.buldings WHERE bulding_name = 'BuildingB')), 
	 			 ST_BUFFER((SELECT building_geom FROM geodane.buldings WHERE bulding_name = 'BuildingB'), 0.5)
		)) AS Area
FROM geodane.buldings
GROUP BY Area;

--ST_AsText (geom -> text)

--6g. Wybierz te budynki, których centroid (ST_Centroid) znajduje się powyżej drogi o nazwie RoadX

SELECT building_id, bulding_name FROM geodane.buldings
	WHERE ST_Y(ST_Centroid(building_geom)) > (SELECT ST_YMax(road_geom) FROM geodane.roads WHERE road_name = 'RoadX');
	
--6h. Oblicz pole powierzchni tych części budynku BuildingC i poligonu o współrzędnych (4 7, 6 7, 6 8, 4 8, 4 7), 
--    które nie są wspólne dla tych dwóch obiektów

SELECT ST_Area(ST_Difference (ST_Union((SELECT building_geom FROM geodane.buldings WHERE bulding_name = 'BuildingC'),
									    ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')),
	  
							  ST_Intersection((SELECT building_geom FROM geodane.buldings WHERE bulding_name = 'BuildingC'),
			   							ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))'))));
						